#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import sys
# import json unused by now
from os import path

try:
    import numpy as np

except Exception as ex:
    print('NumPy is not installed. Please, install it with pip:\n\tpip install numpy')
    print(ex)

try:
    import cv2

except Exception as ex:
    print('OpenCV is not installed. Please, install it with pip:\n\tpip install opencv-python')
    print(ex)

HEADER = 'LegoMe (c) 2021 Geraldo Netto'

def applyCustomColorMap(image) :
    lut = np.zeros((256, 1, 3), dtype = np.uint8)
    # TODO: extract this lego colour palette as RGB to a json file
    lut[:, 0, 0] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 143, 105, 29, 42, 58, 71, 70, 127, 43, 84, 103, 151, 165, 88, 71, 95, 92, 116, 64, 50, 98, 129, 110, 153, 149, 134, 108, 144, 136, 181, 46, 182, 92, 187, 138, 182, 124, 135, 66, 76, 57, 135, 138, 142, 121, 112, 105, 163, 195, 95, 165, 196, 162, 189, 165, 169, 173, 122, 142, 210, 132, 215, 183, 202, 223, 218, 40, 112, 193, 210, 132, 142, 98, 84, 96, 226, 111, 115, 197, 169, 221, 228, 133, 134, 133, 188, 144, 152, 164, 155, 173, 173, 228, 172, 186, 171, 184, 184, 236, 232, 196, 213, 243, 207, 205, 241, 241, 233, 214, 234, 246, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255]
    lut[:, 0, 1] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 155, 171, 50, 52, 86, 139, 44, 70, 117, 147, 164, 74, 175, 87, 50, 97, 67, 172, 39, 123, 155, 183, 108, 201, 120, 156, 98, 129, 161, 181, 47, 232, 69, 221, 93, 141, 144, 136, 133, 42, 120, 103, 115, 163, 118, 159, 91, 168, 233, 52, 162, 139, 164, 70, 203, 206, 172, 89, 68, 227, 85, 213, 177, 222, 240, 184, 27, 160, 183, 60, 66, 104, 152, 75, 36, 247, 76, 61, 153, 75, 86, 167, 108, 121, 64, 129, 149, 100, 194, 63, 200, 200, 222, 88, 199, 45, 145, 127, 236, 222, 182, 160, 242, 155, 47, 141, 132, 153, 46, 140, 123, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255]
    lut[:, 0, 2] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 13, 22, 27, 32, 35, 39, 40, 52, 67, 70, 75, 85, 87, 98, 99, 104, 104, 105, 107, 107, 108, 109, 110, 112, 116, 117, 120, 121, 121, 123, 123, 124, 125, 130, 132, 135, 137, 142, 143, 146, 147, 149, 149, 149, 150, 151, 156, 159, 160, 161, 161, 163, 164, 165, 167, 171, 174, 176, 180, 180, 183, 191, 193, 193, 194, 196, 196, 199, 199, 203, 204, 205, 205, 207, 207, 211, 213, 215, 215, 216, 217, 217, 218, 218, 220, 220, 224, 225, 226, 228, 228, 229, 231, 232, 232, 234, 235, 236, 236, 238, 240, 242, 243, 245, 247, 248, 249, 249, 253, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255]
    return cv2.LUT(image, lut)

def displayRecoloredImage(recoloredImage):
    windowName = HEADER + ' - recolored image'
    cv2.namedWindow(windowName, cv2.WINDOW_KEEPRATIO)
    cv2.imshow(windowName, recoloredImage)
    wait_time = 100
    while cv2.getWindowProperty(windowName, cv2.WND_PROP_VISIBLE) >= 1:
        keyCode = cv2.waitKey(wait_time)
        if (keyCode & 0xFF) == ord("q"):
            cv2.destroyAllWindows()
            break

def checkFileExistence(fileName):
    if not path.isfile(fileName):
        print('The path ' + fileName + ' is not a valid file , exiting')
        sys.exit(1)

def checkCommandLineArgs(args):
    if len(args) != 3:
        print('Usage: python3 %s <input-image.jpg> <output-image.jpg>\n' % args[0])
        sys.exit(0)

    checkFileExistence(args[1])

def main(args):
    print(HEADER)
    checkCommandLineArgs(args)
    inputImage = cv2.imread(args[1])
    recoloredImage = applyCustomColorMap(inputImage)
    cv2.imwrite(args[2], recoloredImage)
    displayRecoloredImage(recoloredImage)

if __name__  == '__main__' :
    main(sys.argv)
